#!/usr/bin/env python
# coding: utf-8

# # 分岐
# 
# ここまでは一文だけの命令を作ってきました。でも、本格的なプログラミングのためには、複数の文を繰返し実行したり、条件分岐させたりということが必要になります。これを制御文と言います。比較演算子や論理演算子について学んだので、いろいろな条件を使ってプログラムを実行させることができるようになりました。

# ## if文とブロックの書き方
# 
# - ```if``` の後に条件を書きます。そして条件が満たされているときは**ブロック**の中身を実行します。
# - ここで**ブロック**という概念が初めて出てきました。```if```の条件の後の:がブロックを示します。Pythonの特徴として、ブロックの領域はインデントを利用して示します。インデントがないとエラーになります。通常は、スペース4つでインデントします。
# - ```else```ブロックはif以下の条件を満たさないときに実行されます。

# ```{margin}
# ここでついでにpythonでのコメントの書き方も学んでおきます。コードの中に、```#```で始まる文を書くと、以後の文は実行時に無視されます。プログラムを書くときは、それぞれのコードで何をしようとしているか、細かくコメントを書いておくことが重要です。
# ```

# In[1]:


# 正解／不正解を返すプログラムを作る
var = 1863
if var == 1864:
    print('正解です！')
else:
    print('不正解です。')


# ```{margin}
# 初心者がよく間違いましたが、pythonにおける```=```は変数の代入に使われます。一方、```==```は等しいかどうかをテストするための演算子です。
# ```

# - 条件分岐が3種類以上に分かれる場合には、
#     - 最初の条件で```if```
#     - 間の条件で```elif```
#     - 最後で```else```

# In[2]:


hour = 23
if hour <= 10:
    print("おはよう")
elif hour>22:
    print("おやすみ")
else:
    print("こんにちは")


# ````{tab-set}
# ```{tab-item} 実習問題
# $x$を入力し、以下の数式で$f(x)$を計算するプログラミングを書いてください。
# ```
# ````

# \begin{equation}
# 
# f(x) = \left\{
# \begin{array}{ll}
# x+5 & (x \lt 0) \\
# 0 & (x == 0) \\
# x^2 & (x > 0)
# \end{array}
# \right.
#  \end{equation} 
# 

# In[3]:


# ここからかいてみよう
x=12


# In[ ]:




